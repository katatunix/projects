//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Transform.cpp
//  @ Date : 6/15/2012
//  @ Author : 
//
//


#include <gata/graphic/Transform.h>

namespace gata {
	namespace graphic {
//=============================================================================
void Transform::append(TransformType e)
{
	m_pList[m_count++] = e;
}

bool Transform::isChangeOri()
{
	bool b = false;
	for (int i = 0; i < m_count; i++)
	{
		if (m_pList[i] == ROTATE_90 || m_pList[i] == ROTATE_270)
		{
			b = !b;
		}
	}
	return b;
}

// static
Transform Transform::concat(Transform* p1, Transform* p2)
{
	Transform res;
	int count = p1->getCount();
	TransformType* pList = p1->getList();

	for (int i = 0; i < count; i++)
	{
		res.append(pList[i]);
	}

	count = p2->getCount();
	pList = p2->getList();
	for (int i = 0; i < count; i++)
	{
		res.append(pList[i]);
	}

	return res;
}
//=============================================================================
	}
}
